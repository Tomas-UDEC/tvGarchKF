% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tvGarchKalmanFit.R
\name{tvGarchKalmanFit}
\alias{tvGarchKalmanFit}
\title{Fit the time-varying (Tv) parameters of the GARCH model (tv-Garch) by using the Kalman Filter method. The tv-parameters are determined by deterministic functions of either linear or non-linear type.}
\usage{
tvGarchKalmanFit(
  series,
  c,
  alpha,
  beta,
  type = c("polynomial", "NoLineal", "trigonometric"),
  exponentes,
  trig,
  arg,
  predict = 0,
  trace.log = F
)
}
\arguments{
\item{series}{Time series.}

\item{c}{Vector containing coefficents of c.}

\item{alpha}{Vector containing coefficents of alpha.}

\item{beta}{Vector containing coefficents of beta.}

\item{type}{Vector of function type for c, alpha and beta.}

\item{exponentes}{Vector for exponenets in NoLineal.}

\item{trig}{Type of trigonometric function.}

\item{arg}{Value of argument for the trigonometric function.}

\item{predict}{Value for time to generate predict.}

\item{trace.log}{Variable to print names of coefficients.}
}
\value{
Return fit values of omega, alpha and beta
}
\description{
The tv-Garch(1,1) model, the parameters vary slowly over time according to linear or non-linear functions.
These parameters are denoted by c(t), α(t) and β(t) which correspond to the model
\eqn{\sigma_t = c(t) +\alpha(t) r^2_{t-1} +\beta(t)\sigma_{t-1}}.
}
\details{
The types of functions for the tv-parameters are: linear, non-linear, trigonometric, and exponential.
For the case of the linear model, the tv-parameters follow the following structure:
\deqn{c(t) = c_0 + c_1u + c_2 u^2 + \ldots + c_p u^p,}
\deqn{\alpha(t) = a_0 + a_1u + a_2 u^2 + \ldots + a_p u^p,}
\deqn{\beta(t) = b_0 + b_1u + b_2 u^2 + \ldots + b_p u^p,}
where \eqn{u=t/T}, with \eqn{t=1, 2, \ldots, T}.
For the non-linear case, it is as follows:
\deqn{c(t) = c_0 + \sum_{j=1}^k c_j u_{c,j},}
\deqn{\alpha(t) = a_0 + \sum_{j=1}^k a_j u_{\alpha,j},}
\deqn{\beta(t) = b_0 + \sum_{j=1}^k b_j u_{\beta,j},}
where \eqn{k} it is positive value and \eqn{u_{c,j}}, \eqn{u_{\alpha,j}} and \eqn{u_{\beta,j}} are non linear function set.
For the trigonometric case, it is as follows:
\deqn{c(t) = c_0 + c_1 g(u),}
\deqn{\alpha(t) = a_0 + a_1 g(u),}
\deqn{\beta(t) = b_0 + b_1 g(u),}
where \eqn{g(u)} it is a trigonometric function, \eqn{cos} or \eqn{sin}.
}
\examples{
data(Ipsa)
ipsa<-diff(log(indipsa))
c <- c(0.05,0.05)
alpha <- c(0.05,0.05)
beta <- c(0.05,0.05)
type_fit <- c("trigonometric","trigonometric","trigonometric")
fit<-tvGarchKalmanFit(ipsa,c=c,alpha=alpha,beta=beta,type=type_fit,trig="cos",arg="3*(1-log(u))")
}
